name: 'Synchronize Branch'
author: 'jojomatik'
description: 'Syncs one branch to another branch'
inputs:
  source:
    description: 'The branch to sync from'
    required: false
    default: ${{ github.ref_name }}
  target:
    description: 'The branch to sync to'
    required: false
    default: 'beta'
  strategy:
    description: 'The strategy to use, if fast-forward is not possible (merge, force, fail)'
    required: false
    default: "merge"
  resolve_conflicts:
    description: 'The changes to accept, if strategy `merge` leads to merge conflicts (target, source, false)'
    required: false
    default: "target"
  git_committer_name:
    description: 'The name to create merge commits with'
    required: false
  git_committer_email:
    description: 'The email to create merge commits with'
    required: false
  github_token:
    description: 'The access token to push to the repository'
    required: false
    default: ${{ github.token }}
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.source }}
        fetch-depth: 0
        token: ${{ inputs.github_token }}
    - name: Set committer identity
      if: inputs.strategy == 'merge'
      run: |
        git config user.name ${{ inputs.git_committer_name }}
        git config user.email ${{ inputs.git_committer_email }}
      shell: bash
    - name: Checkout ${{ inputs.target }}
      if: inputs.strategy == 'merge'
      run: git checkout ${{ inputs.target }}
      shell: bash
    - name: Merge ${{ inputs.source }} into ${{ inputs.target }}
      if: inputs.strategy == 'merge'
      run: git merge ${{ inputs.source }} ${{ inputs.resolve_conflicts != 'false' && format('--strategy-option {0}', inputs.resolve_conflicts == 'target' && 'ours' || 'theirs') || '' }}
      shell: bash
    - name: Push ${{ inputs.target }}
      if: inputs.strategy == 'merge'
      run: git push
      shell: bash
    - name: Rebase ${{ inputs.target }} onto ${{ inputs.source }}
      if: inputs.strategy == 'rebase'
      run: git rebase ${{ inputs.source }} ${{ inputs.target }}
      shell: bash
    - name: Force push ${{ inputs.target }}
      if: inputs.strategy == 'rebase'
      run: git push --force origin ${{ inputs.target }}
      shell: bash
    - name: Force push ${{ inputs.source }} to ${{ inputs.target }}
      if: inputs.strategy == 'force'
      run: git push --force origin ${{ inputs.source }}:${{ inputs.target }}
      shell: bash
    - name: Push ${{ inputs.source }} to ${{ inputs.target }}
      if: inputs.strategy == 'fail'
      run: git push origin ${{ inputs.source }}:${{ inputs.target }}
      shell: bash

branding:
  icon: 'git-merge'
  color: 'white'
